#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const int pos[19][4][2] {
    {{0, 0}, {1, 0}, {2, 0}, {3, 0}},
    {{0, 0}, {0, 1}, {0, 2}, {0, 3}},

    {{0, 0}, {1, 0}, {0, 1}, {1, 1}},

    {{0, 0}, {0, 1}, {0, 2}, {1, 2}},
    {{0, 1}, {0, 0}, {1, 0}, {2, 0}},
    {{0, 0}, {1, 0}, {1, 1}, {1, 2}},
    {{0, 1}, {1, 1}, {2, 1}, {2, 0}},
    {{0, 2}, {1, 2}, {1, 1}, {1, 0}},
    {{0, 0}, {0, 1}, {1, 1}, {2, 1}},
    {{1, 0}, {0, 0}, {0, 1}, {0, 2}},
    {{0, 0}, {1, 0}, {2, 0}, {2, 1}},

    {{0, 0}, {0, 1}, {1, 1}, {1, 2}},
    {{0, 1}, {1, 0}, {1, 1}, {2, 0}},
    {{0, 0}, {1, 1}, {1, 0}, {2, 1}},
    {{0, 1}, {1, 0}, {1, 1}, {0, 2}},

    {{0, 1}, {1, 1}, {1, 0}, {2, 1}},
    {{0, 0}, {0, 1}, {1, 1}, {0, 2}},
    {{0, 0}, {1, 0}, {1, 1}, {2, 0}},
    {{0, 1}, {1, 0}, {1, 1}, {1, 2}},
    };

int v[500][500];
int N, M;
int result{0};

void check(){
    for(int i=0; i<19; ++i){
        for(int j=0; j < M; ++j){
            for(int k=0; k < N; ++k){
                int posVal = 0;

                for(int l=0; l<4; ++l) {
                    int nY = k + pos[i][l][1];
                    int nX = j + pos[i][l][0];

                    if(nX < 0 || nX >= M || nY < 0 || nY >= N){
                        posVal = 0;
                        break;
                    }
                    posVal += v[k + pos[i][l][1]][j + pos[i][l][0]] ;
                }

                result = max(posVal, result);
            }
        }
    }
}

int main() {
    cin >> N >> M;
    for(int i=0; i<N; ++i){
        for(int j=0; j<M; ++j) cin >> v[i][j];
    }

    check();
    cout << result;
}